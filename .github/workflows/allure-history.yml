name: ðŸ“Š Allure Report with History

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

permissions:
  contents: write
  pages: write
  id-token: write
  pull-requests: write

jobs:
  test-and-report:
    runs-on: ubuntu-latest

    steps:
      - name: ðŸ“¥ Checkout
        uses: actions/checkout@v4

      - name: ðŸŸ¢ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: ðŸ“¦ Install dependencies
        run: npm install --legacy-peer-deps

      - name: ðŸŽ­ Install Playwright
        run: npx playwright install chromium --with-deps

      - name: ðŸ§ª Run tests
        run: npm run test:e2e
        continue-on-error: true

      - name: ðŸ“Š Get Allure history
        uses: actions/checkout@v4
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: ðŸ“Š Generate Allure Report with history
        uses: simple-elf/allure-report-action@master
        if: always()
        with:
          allure_results: allure-results
          allure_history: allure-history
          keep_reports: 20

      - name: ðŸš€ Deploy report to GitHub Pages
        if: always() && github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-history

      - name: ðŸ’¬ Comment PR with report
        if: github.event_name == 'pull_request' && always()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');

            // Read test summary
            let summary = 'ðŸ“Š Test execution completed.';

            // Create comment
            const output = `## ðŸŽ­ E2E Test Results

            ${summary}

            ### ðŸ“Š View Detailed Report
            - **On merge to main**: Report will be available at \`https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/\`
            - **Download artifacts**: [Allure Results](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})

            ---
            _ðŸ¤– Automated E2E Testing with Playwright + Allure_
            `;

            // Find existing bot comment
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const botComment = comments.find(comment =>
              comment.user.type === 'Bot' &&
              comment.body.includes('ðŸŽ­ E2E Test Results')
            );

            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: output
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: output
              });
            }